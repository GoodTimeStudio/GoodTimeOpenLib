buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'

version = "dev.0.1" + getBuildNumber()
group= "com.mcgoodtime.openlib"
archivesBaseName = "GoodTimeOpenLib"

minecraft {
    version = "1.10.2-12.18.1.2094"
    runDir = "run"   
	mappings = "snapshot_20160518"
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
        }
    }
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs += [
            '-Xlint:-processing',
            "-AreobfSrgFile=${project.file('build/srgs/mcp-srg.srg').canonicalPath}"
    ]
}

idea { 
    module {
        inheritOutputDirs = true 
    } 
}

task copySrgs(type: Copy, dependsOn: 'genSrgs') {
    from project.plugins.getPlugin('net.minecraftforge.gradle.forge').delayedFile('{SRG_DIR}')

    include '**/*.srg'
    into 'build/srgs'
}
compileJava.dependsOn copySrgs

task deobfJar(type: Jar, dependsOn: 'jar') {
    from sourceSets.main.output
    classifier = 'dev'
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

def getBuildNumber() {
	return "$System.env.BUILD_NUMBER" != "null" ? "." + Integer.parseInt("$System.env.BUILD_NUMBER") : ""
}
